<%- include('../layout/header') %>
<%- include('../layout/menu') %>

<div class="container mt-5">
  <h2 class="mb-4">Calendario de Citas</h2>

  <div class="row">
    <!-- SelecciÃ³n de doctor + horarios del doctor -->
    <div class="col-md-4 mb-4">
      <div class="card shadow">
        <div class="card-body">
          <h5 class="card-title">Seleccionar Doctor</h5>
          <select class="form-select" id="doctor-select">
            <option value="">Seleccione un doctor</option>
            <% doctores.forEach(doctor => { %>
              <option value="<%= doctor.id %>">
                <%= doctor.nombre || 'Sin nombre' %> <%= doctor.apellido || '' %> - <%= doctor.especialidad || 'Sin especialidad' %>
              </option>
            <% }); %>
          </select>
        </div>
      </div>

      <!-- Recuadro para mostrar los dÃ­as/horarios del doctor -->
      <div id="horarios-doctor" class="mt-4">
        <!-- Se rellena dinÃ¡micamente con JavaScript -->
      </div>
    </div>

    <!-- Calendario -->
    <div class="col-md-8">
      <div class="card shadow">
        <div class="card-body">
          <div class="calendar-container">
            <div class="calendar-header d-flex justify-content-between align-items-center">
              <button id="prev-month" class="btn btn-sm btn-outline-primary">&lt; Anterior</button>
              <h5 id="current-month" class="mb-0">Mes Actual</h5>
              <button id="next-month" class="btn btn-sm btn-outline-primary">Siguiente &gt;</button>
            </div>

            <div class="calendar-weekdays mt-3 mb-2 fw-bold text-center row">
              <div class="col">Dom</div>
              <div class="col">Lun</div>
              <div class="col">Mar</div>
              <div class="col">MiÃ©</div>
              <div class="col">Jue</div>
              <div class="col">Vie</div>
              <div class="col">SÃ¡b</div>
            </div>

            <div id="calendar-days" class="calendar-days"></div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Contenedor inferior -->
  <div class="row mt-4">
    <div class="col-md-12">
      <div class="card shadow">
        <div class="card-header">
          <h5 id="selected-date-header">Horarios Disponibles / Citas del DÃ­a</h5>
        </div>
        <div class="card-body">
          <div id="horarios-container" class="d-flex flex-column gap-2">
            <p class="text-center">Seleccione un doctor y una fecha para ver los horarios disponibles</p>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  const eventosCitas = <%- JSON.stringify(eventos || []) %>;

  document.addEventListener('DOMContentLoaded', function () {
    const doctorSelect = document.getElementById('doctor-select');
    const horariosDoctor = document.getElementById('horarios-doctor');
    const prevMonthBtn = document.getElementById('prev-month');
    const nextMonthBtn = document.getElementById('next-month');
    const currentMonthEl = document.getElementById('current-month');
    const calendarDaysEl = document.getElementById('calendar-days');
    const selectedDateHeaderEl = document.getElementById('selected-date-header');
    const horariosContainerEl = document.getElementById('horarios-container');

    let currentDate = new Date();
    let selectedDate = null;
    let selectedDoctor = null;

    renderCalendar();

    doctorSelect.addEventListener('change', function () {
      selectedDoctor = this.value;
      horariosDoctor.innerHTML = '';

      // ðŸ”„ Mostrar horarios del doctor
      if (selectedDoctor) {
        fetch(`/doctores/${selectedDoctor}/horarios`)
          .then(res => res.json())
          .then(data => {
            if (data.length === 0) {
              horariosDoctor.innerHTML = `
                <div class="alert alert-warning text-center mt-2">
                  Este doctor no tiene horarios registrados.
                </div>`;
              return;
            }

            const dias = ['Domingo', 'Lunes', 'Martes', 'MiÃ©rcoles', 'Jueves', 'Viernes', 'SÃ¡bado'];

            const tarjetas = data.map(h => {
  const entrada = h.horaEntrada?.substring(0, 5) || h.horalInicio?.substring(0, 5) || h.horaInicio?.substring(0, 5) || 'â€”';
  const salida = h.horaSalida?.substring(0, 5) || h.horaFin?.substring(0, 5) || 'â€”';
  const comida = h.horaComida?.substring(0, 5) || h.comidaInicio?.substring(0, 5) || 'â€”';

  const diaNombre = h.dia.charAt(0).toUpperCase() + h.dia.slice(1);

  return `
    <div class="card mb-2 shadow-sm">
      <div class="card-body p-2">
        <strong>${diaNombre}</strong><br>
        Entrada: ${entrada}<br>
        Comida: ${comida}<br>
        Salida: ${salida}
      </div>
    </div>
  `;
});



            horariosDoctor.innerHTML = `
              <div class="card shadow mt-3">
                <div class="card-header text-center fw-bold">DÃ­as y Horarios del Doctor</div>
                <div class="card-body">${tarjetas}</div>
              </div>
            `;
          })
          .catch(() => {
            horariosDoctor.innerHTML = `
              <div class="alert alert-danger text-center mt-2">Error al cargar horarios</div>`;
          });
      }

      if (selectedDate) cargarHorarios();
    });

    prevMonthBtn.addEventListener('click', () => {
      currentDate.setMonth(currentDate.getMonth() - 1);
      renderCalendar();
    });

    nextMonthBtn.addEventListener('click', () => {
      currentDate.setMonth(currentDate.getMonth() + 1);
      renderCalendar();
    });

    function renderCalendar() {
      const year = currentDate.getFullYear();
      const month = currentDate.getMonth();
      const monthNames = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',
                          'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];
      currentMonthEl.textContent = `${monthNames[month]} ${year}`;
      calendarDaysEl.innerHTML = '';

      const firstDay = new Date(year, month, 1);
      const lastDay = new Date(year, month + 1, 0);

      let currentRow = document.createElement('div');
      currentRow.className = 'row text-center';

      for (let i = 0; i < firstDay.getDay(); i++) {
        const emptyCell = document.createElement('div');
        emptyCell.className = 'col calendar-day empty';
        currentRow.appendChild(emptyCell);
      }

      for (let day = 1; day <= lastDay.getDate(); day++) {
        const date = new Date(year, month, day);
        if (date.getDay() === 0 && day > 1) {
          calendarDaysEl.appendChild(currentRow);
          currentRow = document.createElement('div');
          currentRow.className = 'row text-center';
        }

        const dayCell = document.createElement('div');
        dayCell.className = 'col calendar-day p-2';
        dayCell.textContent = day;

        const today = new Date();
        today.setHours(0, 0, 0, 0);

        const fechaActual = `${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`;
        const eventosDelDia = eventosCitas.filter(ev => ev.start.startsWith(fechaActual));

        if (eventosDelDia.length > 0) {
          dayCell.classList.add('bg-primary', 'text-white', 'fw-bold', 'rounded');
        }

        if (date < today) {
          dayCell.classList.add('disabled');
        } else {
          dayCell.classList.add('selectable');

          dayCell.addEventListener('click', function () {
            document.querySelectorAll('.calendar-day.selected').forEach(el => el.classList.remove('selected'));
            this.classList.add('selected');
            selectedDate = new Date(year, month, day);
            selectedDateHeaderEl.textContent = `Citas del ${selectedDate.toLocaleDateString()}`;
            mostrarCitasDelDia(fechaActual);

            if (selectedDoctor) cargarHorarios();
          });
        }

        currentRow.appendChild(dayCell);
      }

      calendarDaysEl.appendChild(currentRow);
    }

    function mostrarCitasDelDia(fecha) {
      horariosContainerEl.innerHTML = '';
      const eventosDelDia = eventosCitas.filter(ev => ev.start.startsWith(fecha));

      if (eventosDelDia.length === 0) {
        horariosContainerEl.innerHTML = '<p class="text-center">No hay citas para este dÃ­a</p>';
      } else {
        eventosDelDia.forEach(ev => {
          const hora = ev.start.split('T')[1].substring(0, 5);
          const div = document.createElement('div');
          div.className = 'border rounded p-2 bg-light';
          div.innerHTML = `
            <strong>Doctor:</strong> ${ev.title.split(' - ')[0]}<br>
            <strong>Motivo:</strong> ${ev.title.split(' - ')[1]}<br>
            <strong>Hora:</strong> ${hora}
          `;
          horariosContainerEl.appendChild(div);
        });
      }
    }

    function cargarHorarios() {
      if (!selectedDoctor || !selectedDate) return;
      const fechaFormateada = selectedDate.toISOString().split('T')[0];

      fetch('/citas/horarios', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ doctorId: selectedDoctor, fecha: fechaFormateada })
      })
      .then(response => response.json())
      .then(data => {
        if (data.length > 0) {
          const seccion = document.createElement('div');
          seccion.innerHTML = '<hr><p class="fw-bold">Horarios Disponibles:</p>';
          horariosContainerEl.appendChild(seccion);

          data.forEach(horario => {
            const hora = horario.horaInicio.substring(0, 5);
            const horarioBtn = document.createElement('a');
            horarioBtn.href = `/citas/nueva?doctorId=${selectedDoctor}&fecha=${fechaFormateada}&hora=${hora}`;
            horarioBtn.className = 'btn btn-outline-primary me-2 mb-2';
            horarioBtn.textContent = hora;
            horariosContainerEl.appendChild(horarioBtn);
          });
        }
      });
    }
  });
</script>

<%- include('../layout/footer') %>
